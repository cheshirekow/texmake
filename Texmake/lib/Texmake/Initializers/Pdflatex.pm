##  @class
#   @brief  initializes the dependency graph for a pdf output generated by
#           pdflatex
package Texmake::Initializers::Pdflatex;

use strict;

use XML::Dumper;
use File::Basename;

use Texmake::Printer qw(print_w print_f print_n print_e);
use Texmake::PrintIncrementer;

use Texmake::DependencyGraph::Nodes::Source;
use Texmake::DependencyGraph::Nodes::Copy;
use Texmake::DependencyGraph::Nodes::Pdflatex;


##  @cmethod    object new( void )
#   @brief      creates a new initializer for pdflatex builds
#
sub new
{
    # the object doesn't actually have to hold any information, it just 
    # implements an interface
    my $this = {};  
    
    bless($this);
    return $this;
}

##  @method void go($target)
#   @brief  performs the actual initialization, creating the build directory,
#           generating the rootfile, generating the dependency graph
#   @param[in]  init    reference to the Texmake::Initializer who is calling us
sub go
{
    my $this    = shift;
    my $target  = shift;
    my $output  = $target->{'output'};
    my $source  = $target->{'source'};
    my $header  = $target->{'header'};
    my $footer  = $target->{'footer'};
    my $outdir  = "$output.texmake";
    my $srcdir  = dirname($source);
    
    my $fh;
    print_n 0, "Generating $outdir/root.tex";
    open ($fh, '>', "$outdir/root.tex");
    print $fh <<"HERE";
$header
\\input{$source}
$footer
HERE
    close $fh;
    
    my $rootfile= "$outdir/root.tex";
    my $buildout= "$outdir/root.pdf";

    my $copyNode        = new Texmake::DependencyGraph::Nodes::Copy($output,$buildout);    
    my $pdflatexNode    = new Texmake::DependencyGraph::Nodes::Pdflatex($outdir,$srcdir);
    # we don't need to explicitly add the source file since the scanner will
    # pick that up during the first build

    $copyNode->dependsOn($pdflatexNode);
    
    my $xmldump = new XML::Dumper();
    
    print_e "Generating $outdir/dependencies.xml";
    open($fh, '>', "$outdir/dependencies.xml") 
            or die "Failed to open $outdir/dependencies.xml $!";
    
    print $fh $xmldump->pl2xml($copyNode);
    close $fh;
}




1;